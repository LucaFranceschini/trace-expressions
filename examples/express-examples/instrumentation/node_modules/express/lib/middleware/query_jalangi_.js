J$.iids = {"8":[29,7,29,36],"9":[9,1,9,13],"10":[29,7,29,21],"16":[34,7,34,63],"17":[9,1,9,14],"18":[29,7,29,36],"24":[34,7,34,63],"25":[15,13,15,20],"26":[34,7,34,25],"32":[40,9,40,19],"33":[15,21,15,34],"34":[34,29,34,63],"41":[15,13,15,35],"42":[40,9,40,19],"49":[15,13,15,35],"57":[15,13,15,35],"65":[16,16,16,23],"73":[16,24,16,34],"81":[16,16,16,35],"89":[16,16,16,35],"97":[16,16,16,35],"105":[17,10,17,17],"113":[17,18,17,22],"121":[17,10,17,23],"129":[17,10,17,23],"137":[17,10,17,23],"145":[25,1,25,7],"153":[26,14,26,19],"161":[26,20,26,22],"169":[26,24,26,31],"177":[26,14,26,32],"185":[26,14,26,32],"193":[26,14,26,32],"201":[27,20,27,22],"209":[27,20,27,28],"217":[27,20,27,28],"225":[27,20,27,28],"233":[29,14,29,21],"241":[29,26,29,36],"249":[30,18,30,25],"257":[30,18,30,25],"265":[30,5,30,26],"273":[31,12,31,21],"281":[31,12,31,21],"289":[31,5,31,22],"297":[34,7,34,11],"305":[34,16,34,25],"313":[34,29,34,33],"321":[34,29,34,49],"329":[34,54,34,63],"337":[36,5,36,9],"345":[36,28,36,32],"353":[36,5,36,32],"361":[36,5,36,33],"369":[40,10,40,13],"377":[40,10,40,19],"385":[41,17,41,25],"393":[41,26,41,29],"401":[41,17,41,30],"409":[41,17,41,36],"417":[41,17,41,36],"425":[41,17,41,36],"433":[42,7,42,10],"441":[42,19,42,29],"449":[42,30,42,33],"457":[42,35,42,39],"465":[42,19,42,40],"473":[42,7,42,40],"481":[42,7,42,41],"489":[45,5,45,9],"497":[45,5,45,11],"505":[45,5,45,12],"513":[39,10,46,4],"521":[39,10,46,4],"529":[39,10,46,4],"537":[39,10,46,4],"545":[39,10,46,4],"553":[39,10,46,4],"561":[39,10,46,4],"569":[39,10,46,4],"577":[39,10,46,4],"585":[39,3,46,5],"593":[25,18,47,2],"601":[25,18,47,2],"609":[25,18,47,2],"617":[25,18,47,2],"625":[25,18,47,2],"633":[25,18,47,2],"641":[25,18,47,2],"649":[25,1,47,2],"657":[25,1,47,3],"665":[1,1,48,1],"673":[1,1,48,1],"681":[1,1,48,1],"689":[1,1,48,1],"697":[29,3,32,4],"705":[34,3,37,4],"713":[40,5,43,6],"721":[39,10,46,4],"729":[39,10,46,4],"737":[25,18,47,2],"745":[25,18,47,2],"753":[1,1,48,1],"761":[1,1,48,1],"nBranches":8,"originalCodeFileName":"/home/davide/TechRep/programming18/express-examples/node_modules/express/lib/middleware/query.js","instrumentedCodeFileName":"/home/davide/TechRep/programming18/express-examples/node_modules/express/lib/middleware/query_jalangi_.js","code":"/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n */\n\nvar merge = require('utils-merge')\nvar parseUrl = require('parseurl');\nvar qs = require('qs');\n\n/**\n * @param {Object} options\n * @return {Function}\n * @api public\n */\n\nmodule.exports = function query(options) {\n  var opts = merge({}, options)\n  var queryparse = qs.parse;\n\n  if (typeof options === 'function') {\n    queryparse = options;\n    opts = undefined;\n  }\n\n  if (opts !== undefined && opts.allowPrototypes === undefined) {\n    // back-compat for qs module\n    opts.allowPrototypes = true;\n  }\n\n  return function query(req, res, next){\n    if (!req.query) {\n      var val = parseUrl(req).query;\n      req.query = queryparse(val, opts);\n    }\n\n    next();\n  };\n};\n"};
jalangiLabel197:
    while (true) {
        try {
            J$.Se(665, '/home/davide/TechRep/programming18/express-examples/node_modules/express/lib/middleware/query_jalangi_.js', '/home/davide/TechRep/programming18/express-examples/node_modules/express/lib/middleware/query.js');
            J$.N(673, 'merge', merge, 0);
            J$.N(681, 'parseUrl', parseUrl, 0);
            J$.N(689, 'qs', qs, 0);
            J$.X1(17, J$.T(9, 'use strict', 21, false));
            var merge = J$.X1(57, J$.W(49, 'merge', J$.F(41, J$.R(25, 'require', require, 2), 0)(J$.T(33, 'utils-merge', 21, false)), merge, 3));
            var parseUrl = J$.X1(97, J$.W(89, 'parseUrl', J$.F(81, J$.R(65, 'require', require, 2), 0)(J$.T(73, 'parseurl', 21, false)), parseUrl, 3));
            var qs = J$.X1(137, J$.W(129, 'qs', J$.F(121, J$.R(105, 'require', require, 2), 0)(J$.T(113, 'qs', 21, false)), qs, 3));
            J$.X1(657, J$.P(649, J$.R(145, 'module', module, 2), 'exports', J$.T(641, function query(options) {
                jalangiLabel196:
                    while (true) {
                        try {
                            J$.Fe(593, arguments.callee, this, arguments);
                            arguments = J$.N(601, 'arguments', arguments, 4);
                            query = J$.N(609, 'query', query, 0);
                            options = J$.N(617, 'options', options, 4);
                            J$.N(625, 'opts', opts, 0);
                            J$.N(633, 'queryparse', queryparse, 0);
                            var opts = J$.X1(193, J$.W(185, 'opts', J$.F(177, J$.R(153, 'merge', merge, 1), 0)(J$.T(161, {}, 11, false), J$.R(169, 'options', options, 0)), opts, 1));
                            var queryparse = J$.X1(225, J$.W(217, 'queryparse', J$.G(209, J$.R(201, 'qs', qs, 1), 'parse', 0), queryparse, 1));
                            if (J$.X1(697, J$.C(8, J$.B(18, '===', J$.U(10, 'typeof', J$.R(233, 'options', options, 0)), J$.T(241, 'function', 21, false), 0)))) {
                                J$.X1(265, queryparse = J$.W(257, 'queryparse', J$.R(249, 'options', options, 0), queryparse, 0));
                                J$.X1(289, opts = J$.W(281, 'opts', J$.T(273, undefined, 24, false), opts, 0));
                            }
                            if (J$.X1(705, J$.C(24, J$.C(16, J$.B(26, '!==', J$.R(297, 'opts', opts, 0), J$.T(305, undefined, 24, false), 0)) ? J$.B(34, '===', J$.G(321, J$.R(313, 'opts', opts, 0), 'allowPrototypes', 0), J$.T(329, undefined, 24, false), 0) : J$._()))) {
                                J$.X1(361, J$.P(353, J$.R(337, 'opts', opts, 0), 'allowPrototypes', J$.T(345, true, 23, false), 0));
                            }
                            return J$.X1(585, J$.Rt(577, J$.T(569, function query(req, res, next) {
                                jalangiLabel195:
                                    while (true) {
                                        try {
                                            J$.Fe(513, arguments.callee, this, arguments);
                                            arguments = J$.N(521, 'arguments', arguments, 4);
                                            query = J$.N(529, 'query', query, 0);
                                            req = J$.N(537, 'req', req, 4);
                                            res = J$.N(545, 'res', res, 4);
                                            next = J$.N(553, 'next', next, 4);
                                            J$.N(561, 'val', val, 0);
                                            if (J$.X1(713, J$.C(32, J$.U(42, '!', J$.G(377, J$.R(369, 'req', req, 0), 'query', 0))))) {
                                                var val = J$.X1(425, J$.W(417, 'val', J$.G(409, J$.F(401, J$.R(385, 'parseUrl', parseUrl, 1), 0)(J$.R(393, 'req', req, 0)), 'query', 0), val, 1));
                                                J$.X1(481, J$.P(473, J$.R(433, 'req', req, 0), 'query', J$.F(465, J$.R(441, 'queryparse', queryparse, 0), 0)(J$.R(449, 'val', val, 0), J$.R(457, 'opts', opts, 0)), 0));
                                            }
                                            J$.X1(505, J$.F(497, J$.R(489, 'next', next, 0), 0)());
                                        } catch (J$e) {
                                            J$.Ex(721, J$e);
                                        } finally {
                                            if (J$.Fr(729))
                                                continue jalangiLabel195;
                                            else
                                                return J$.Ra();
                                        }
                                    }
                            }, 12, false, 513)));
                        } catch (J$e) {
                            J$.Ex(737, J$e);
                        } finally {
                            if (J$.Fr(745))
                                continue jalangiLabel196;
                            else
                                return J$.Ra();
                        }
                    }
            }, 12, false, 593), 0));
        } catch (J$e) {
            J$.Ex(753, J$e);
        } finally {
            if (J$.Sr(761)) {
                J$.L();
                continue jalangiLabel197;
            } else {
                J$.L();
                break jalangiLabel197;
            }
        }
    }
// JALANGI DO NOT INSTRUMENT
