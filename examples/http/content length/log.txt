Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_pre,name=Number,id=1,args=[3],targetId=2])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_post,name=Number,res=3,args=[3]])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_pre,name=require,id=3,args=[http],targetId=2])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_pre,name=byteLength,id=4,args=[hello, world!],targetId=5])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_post,name=byteLength,res=13,args=[hello, world!]])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_pre,name=now,id=6,args=[],targetId=7])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_post,name=now,res=1537994808625,args=[]])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_pre,name=request,id=8,args=[],targetId=2])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_pre,name=http.request,id=9,args=[json([headers=json([content-length=13]),method=POST,port=8080])],targetId=10])

Trace expression:
@(filter>>S_2,[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=eps\/var(id,chunk_req(var(id)): (S_1|S_2))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_2))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps)])
Event: 
json([event=func_post,name=http.request,res=json([output=[],outputEncodings=[],outputCallbacks=[],outputSize=0,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @false,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[json([headers=json([content-length=13]),method=POST,port=8080])],resultId=11])

Trace expression:
@(filter>> (var(cl2,write(11,13,var(cl2)):S_1)\/ (end(11,13):eps)|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),[S_1=var(cl,write(11,var(cl2),var(cl)):var(cl2,write(11,var(cl),var(cl2)):S_1)\/ (end(11,var(cl)):eps))\/ (end(11,var(cl2)):eps),S_2= (write(var(id)):S_2)\/ (end(var(id)):eps),S_3=chunk_req(var(id)): (S_2|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),S_4=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_4)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_5= (write(var(id)):S_5)\/ (end(var(id)):eps),S_6=eps\/var(id,chunk_req(var(id)): (S_5|S_6))\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))])
Event: 
json([event=func_pre,name=end,id=12,args=[hello, world!,@null],targetId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=end,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[hello, world!,@null],resultId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=on,id=13,args=[error,@null],targetId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=addListener,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[error,@null],resultId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=request,args=[]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=[anonymous],args=[],targetId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=setTimeout,id=14,args=[@null,0],targetId=2])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=setTimeout,res=json([]),args=[@null,0],resultId=15])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=[anonymous],args=[],targetId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=request,args=[],targetId=15])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=http.request,id=16,args=[json([headers=json([content-length=13]),method=POST,port=8080])],targetId=10])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=http.request,res=json([output=[],outputEncodings=[],outputCallbacks=[],outputSize=0,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @false,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[json([headers=json([content-length=13]),method=POST,port=8080])],resultId=17])

Trace expression:
@(filter>> (var(cl2,write(17,13,var(cl2)):S_1)\/ (end(17,13):eps)|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),[S_1=var(cl,write(17,var(cl2),var(cl)):var(cl2,write(17,var(cl),var(cl2)):S_1)\/ (end(17,var(cl)):eps))\/ (end(17,var(cl2)):eps),S_2= (write(var(id)):S_2)\/ (end(var(id)):eps),S_3=chunk_req(var(id)): (S_2|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),S_4=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_4)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_5= (write(var(id)):S_5)\/ (end(var(id)):eps),S_6=eps\/var(id,chunk_req(var(id)): (S_5|S_6))\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))])
Event: 
json([event=func_pre,name=end,id=18,args=[hello, world!,@null],targetId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=end,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[hello, world!,@null],resultId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=on,id=19,args=[error,@null],targetId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=addListener,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[error,@null],resultId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=request,args=[],targetId=15])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=[anonymous],args=[],targetId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=setTimeout,id=20,args=[@null,0],targetId=2])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=setTimeout,res=json([]),args=[@null,0],resultId=21])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=[anonymous],args=[],targetId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=request,args=[],targetId=21])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=http.request,id=22,args=[json([headers=json([content-length=13]),method=POST,port=8080])],targetId=10])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=http.request,res=json([output=[],outputEncodings=[],outputCallbacks=[],outputSize=0,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @false,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[json([headers=json([content-length=13]),method=POST,port=8080])],resultId=23])

Trace expression:
@(filter>> (var(cl2,write(23,13,var(cl2)):S_1)\/ (end(23,13):eps)|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),[S_1=var(cl,write(23,var(cl2),var(cl)):var(cl2,write(23,var(cl),var(cl2)):S_1)\/ (end(23,var(cl)):eps))\/ (end(23,var(cl2)):eps),S_2= (write(var(id)):S_2)\/ (end(var(id)):eps),S_3=chunk_req(var(id)): (S_2|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),S_4=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_4)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_5= (write(var(id)):S_5)\/ (end(var(id)):eps),S_6=eps\/var(id,chunk_req(var(id)): (S_5|S_6))\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))])
Event: 
json([event=func_pre,name=end,id=24,args=[hello, world!,@null],targetId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=end,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[hello, world!,@null],resultId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=on,id=25,args=[error,@null],targetId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=addListener,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[error,@null],resultId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=request,args=[],targetId=21])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=[anonymous],args=[],targetId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=now,id=26,args=[],targetId=7])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=now,res=1537994808644,args=[]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=log,id=27,args=[Requests: 3 Time (sec):0.019 RPS: 157.89473684210526],targetId=28])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=bound consoleCall,args=[Requests: 3 Time (sec):0.019 RPS: 157.89473684210526]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=exit,id=29,args=[],targetId=30])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=Number,id=1,args=[3],targetId=2])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=Number,res=3,args=[3]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=require,id=3,args=[http],targetId=2])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=byteLength,id=4,args=[hello, world!],targetId=5])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=byteLength,res=13,args=[hello, world!]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=now,id=6,args=[],targetId=7])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=now,res=1537994823861,args=[]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=request,id=8,args=[],targetId=2])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=http.request,id=9,args=[json([headers=json([content-length=13]),method=POST,port=8080])],targetId=10])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=http.request,res=json([output=[],outputEncodings=[],outputCallbacks=[],outputSize=0,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @false,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[json([headers=json([content-length=13]),method=POST,port=8080])],resultId=11])

Trace expression:
@(filter>> (var(cl2,write(11,13,var(cl2)):S_1)\/ (end(11,13):eps)|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),[S_1=var(cl,write(11,var(cl2),var(cl)):var(cl2,write(11,var(cl),var(cl2)):S_1)\/ (end(11,var(cl)):eps))\/ (end(11,var(cl2)):eps),S_2= (write(var(id)):S_2)\/ (end(var(id)):eps),S_3=chunk_req(var(id)): (S_2|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),S_4=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_4)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_5= (write(var(id)):S_5)\/ (end(var(id)):eps),S_6=eps\/var(id,chunk_req(var(id)): (S_5|S_6))\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))])
Event: 
json([event=func_pre,name=end,id=12,args=[hello, world!,@null],targetId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=end,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[hello, world!,@null],resultId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=on,id=13,args=[error,@null],targetId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=addListener,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[error,@null],resultId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=request,args=[]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=[anonymous],args=[],targetId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=setTimeout,id=14,args=[@null,0],targetId=2])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=setTimeout,res=json([]),args=[@null,0],resultId=15])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=[anonymous],args=[],targetId=11])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=request,args=[],targetId=15])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=http.request,id=16,args=[json([headers=json([content-length=13]),method=POST,port=8080])],targetId=10])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=http.request,res=json([output=[],outputEncodings=[],outputCallbacks=[],outputSize=0,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @false,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[json([headers=json([content-length=13]),method=POST,port=8080])],resultId=17])

Trace expression:
@(filter>> (var(cl2,write(17,13,var(cl2)):S_1)\/ (end(17,13):eps)|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),[S_1=var(cl,write(17,var(cl2),var(cl)):var(cl2,write(17,var(cl),var(cl2)):S_1)\/ (end(17,var(cl)):eps))\/ (end(17,var(cl2)):eps),S_2= (write(var(id)):S_2)\/ (end(var(id)):eps),S_3=chunk_req(var(id)): (S_2|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),S_4=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_4)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_5= (write(var(id)):S_5)\/ (end(var(id)):eps),S_6=eps\/var(id,chunk_req(var(id)): (S_5|S_6))\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))])
Event: 
json([event=func_pre,name=end,id=18,args=[hello, world!,@null],targetId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=end,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[hello, world!,@null],resultId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=on,id=19,args=[error,@null],targetId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=addListener,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[error,@null],resultId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=request,args=[],targetId=15])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=[anonymous],args=[],targetId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=setTimeout,id=20,args=[@null,0],targetId=2])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=setTimeout,res=json([]),args=[@null,0],resultId=21])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=[anonymous],args=[],targetId=17])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=request,args=[],targetId=21])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=http.request,id=22,args=[json([headers=json([content-length=13]),method=POST,port=8080])],targetId=10])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=http.request,res=json([output=[],outputEncodings=[],outputCallbacks=[],outputSize=0,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @false,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[json([headers=json([content-length=13]),method=POST,port=8080])],resultId=23])

Trace expression:
@(filter>> (var(cl2,write(23,13,var(cl2)):S_1)\/ (end(23,13):eps)|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),[S_1=var(cl,write(23,var(cl2),var(cl)):var(cl2,write(23,var(cl),var(cl2)):S_1)\/ (end(23,var(cl)):eps))\/ (end(23,var(cl2)):eps),S_2= (write(var(id)):S_2)\/ (end(var(id)):eps),S_3=chunk_req(var(id)): (S_2|eps\/var(id,S_3)\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))),S_4=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_4)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_5= (write(var(id)):S_5)\/ (end(var(id)):eps),S_6=eps\/var(id,chunk_req(var(id)): (S_5|S_6))\/var(id,var(cl,req(var(id),var(cl)): (S_4|S_6)))])
Event: 
json([event=func_pre,name=end,id=24,args=[hello, world!,@null],targetId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=end,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[hello, world!,@null],resultId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=on,id=25,args=[error,@null],targetId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=addListener,res=json([output=[POST / HTTP/1.1
content-length: 13
Host: localhost:8080
Connection: close

hello, world!,],outputEncodings=[@null,latin1],outputCallbacks=[@null,@null],outputSize=93,writable= @true,chunkedEncoding= @false,shouldKeepAlive= @false,useChunkedEncodingByDefault= @true,sendDate= @false,finished= @true,socket= @null,connection= @null,agent=json([defaultPort=80,protocol=http:,options=json([path= @null]),requests=json([]),sockets=json([localhost:8080: = [[Object],[Object],[Object]]]),freeSockets=json([]),keepAliveMsecs=1000,keepAlive= @false,maxSockets= @null,maxFreeSockets=256]),method=POST,path= (/),res= @null,timeoutCb= @null,upgradeOrConnect= @false,parser= @null,maxHeadersCount= @null]),args=[error,@null],resultId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=request,args=[],targetId=21])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=[anonymous],args=[],targetId=23])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=now,id=26,args=[],targetId=7])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=now,res=1537994823876,args=[]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=log,id=27,args=[Requests: 3 Time (sec):0.015 RPS: 200],targetId=28])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_post,name=bound consoleCall,args=[Requests: 3 Time (sec):0.015 RPS: 200]])

Trace expression:
@(filter>> (eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),[S_1= (write(var(id)):S_1)\/ (end(var(id)):eps),S_2=chunk_req(var(id)): (S_1|eps\/var(id,S_2)\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))),S_3=var(cl2,write(var(id),var(cl),var(cl2)):var(cl,write(var(id),var(cl2),var(cl)):S_3)\/ (end(var(id),var(cl2)):eps))\/ (end(var(id),var(cl)):eps),S_4= (write(var(id)):S_4)\/ (end(var(id)):eps),S_5=eps\/var(id,chunk_req(var(id)): (S_4|S_5))\/var(id,var(cl,req(var(id),var(cl)): (S_3|S_5)))])
Event: 
json([event=func_pre,name=exit,id=29,args=[],targetId=30])

