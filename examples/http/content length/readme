The server processes HTTP requests by collecting their bodies, and prints 'ok' when all body chunks
have been received ('end' event).

The correct client sends a POST request where content-length field is correctly set to the size of the body, then receives
an 'ok' response from the server and terminates.

The behavior of `buggyClientTooHigh.js` is similar, but the content-length field is set to a number greater than the correct size;
as a consequence, the server waits forever for the 'end' event which will never occur, since the system waits for more data chunks, and, hence,
the client does not receive any response.

In `buggyClientTooLow.js` the content-length field is set to a number lower than the correct size, therefore the body is received only
partially.

In `lazyClient.js` the content-length field is not explicitly specified, therefore it is automatically added with the correct value.

`benchmark-client.js` sends N (passed as argument) requests to the server without collecting its responses, and then computes the number of requests
per second (RPS).
