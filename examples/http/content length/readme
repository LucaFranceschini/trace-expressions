il server riceve richieste HTTP e risponde 'ok' quando ha finito di ricevere il messaggio (evento 'end').

il client corretto invia una POST con un messaggio e l'header content-length corretto, riceve la risposta 'ok' e termina.

buggyClientTooHigh fa la stessa cosa ma con un content-length errato (più alto), e non riceve mai la risposta perché lato server l'evento 'end' non viene mai invocato, perché il sistema crede ci siano ancora dati da ricevere.

viceversa, buggyClientTooLow usa un content-length minore della reale lunghezza, ed il resto del messaggio viene perso!

lazyClient non specifica il content-length, che viene calcolato ed automaticamente aggiunto all'header.

`client.js` prende come argomento il numero di richieste e calcola il numero di richieste per secondo.
